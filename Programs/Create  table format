## Method:1 ##
methods = [i for i in dir(str) if not i.startswith('_')]
fmt = '{:15s}'*4

for fn in zip(*[iter(methods)] *4):
    print(fmt.format(*fn))

##Method 2: ###
Create table format:
hfmt = '{:18s}' + ('  {:>5}' * 6)
print(hfmt.format('Name', 'File', 'Dir', 'Link', 'FIFO', 'Block', 'Character'))

Output:
Name                 File    Dir   Link   FIFO  Block  Character

##Method:4 ##
Beautiful format
How to format the output using zip and iter method?
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]

for i,j,k in zip(*[iter(lst)] *3):
    print('{:4} {:4} {:4}'.format(i, j, k))

Output:
1    2    3
4    5    6
7    8    9

## How to print every 3 words per line in a file? ##
from pathlib import Path

words = Path('/home/mana/Work/data1.txt').read_text().split()

for x, y in enumerate(words, 1):
    print(f'{y:12s}', end =' ')
    if x%3 == 0:
        print()
        
 ## Print categorize ##
 from itertools import permutations

def show(iterable):
    first = None
    for i, item in enumerate(iterable, 1):
        if first != item[0]:
            if first is not None:
                print()
            first = item[0]
        print(''.join(item), end=' ')
    print()


print('All permutations:\n')
show(permutations('abcd'))  

Output:
abcd abdc acbd acdb adbc adcb 
bacd badc bcad bcda bdac bdca 
cabd cadb cbad cbda cdab cdba 
dabc dacb dbac dbca dcab dcba 
